{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 8a.\
In this lab, we can see how stack changes during forth functions by the terminal shown in the browser. Therefore, it gives me a more direct view to see the whole process dynamically. Although the this calculator sounds complicated, it comes from stack and it follows the basic rules of stack. Therefore, it is very important to understand everything from a stack perspective, which means to focus on everything on the top.\
\
8b.\
The lack of types makes the process of debugging harder. For example, when I added loop into the function process, I misplaced one variable. If it were in C++, I can find this error easily because the variable types do not match. However, it took me some time to see why the code stops here even with the help of developer tool. \
\
At the same time, when more variables were involved, it required me to take more time to name each variable more carefully to differentiate the type.\
\
8c.\
A little surprising. I thought it would be similar to java due to its name. I think it is harder to me in some ways. I studied data structure in java, and I am used to writing down the type for each variable to make sure that I can understand how to use each variable accurately. Although it might take less time to write a code without type, things will become more complicated when you face some bugs. At the same time, when a lot of variables are available, types will make things more logical to me.\
\
8d.\
JavaScript is dynamic typing language, which means the value\'92s type is enforced, but the variable simply represents any value of any type. One direct symbol is in JS, we do not need to declare the type to create a new variable, a simple var 
\i variableName
\i0  is fine.\
\
JS prototype property allows coders to add new properties and new methods to an existing prototype. I do not think I used prototype in my code, but I can some of its applications to construct something similar to class but in a more flexible way.\
\
}